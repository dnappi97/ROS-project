#!/usr/bin/env python3

import rospy
from geometry_msgs.msg import Twist
from sensor_msgs.msg import LaserScan

if __name__ == '__main__':

    # Inizializza il nodo ROS
    rospy.init_node('avoid_obstacles_controller')

    # Crea un publisher per il topic 'cmd_vel' per inviare i comandi di velocità
    cmd_vel_pub = rospy.Publisher('cmd_vel', Twist, queue_size=5)

    # Crea un oggetto di tipo Twist per rappresentare i comandi di velocità lineare e angolare
    twist = Twist()
    
    try:
        # Imposta la velocità lineare
        twist.linear.x = 0.5  # Modifica il valore per regolare la velocità

        # Imposta la velocità angolare a zero per mantenere il robot dritto
        twist.angular.z = 0.0

        # Pubblica i comandi di velocità sul topic 'cmd_vel' per far muovere il robot
        cmd_vel_pub.publish(twist)

        # Aspetta per 5 secondi
        rospy.sleep(5.0)

        # Ferma il robot impostando le velocità lineare e angolare a zero
        twist.linear.x = 0.0
        twist.angular.z = 0.0
        cmd_vel_pub.publish(twist)
        
        #attende che il nodo ROS venga terminato
        rospy.spin()
        
    except rospy.ROSInterruptException:
        print (e)
        #pass
     
    finally:
        twist = Twist()
        twist.linear.x = 0; twist.linear.y = 0; twist.linear.z = 0
        twist.angular.x = 0; twist.angular.y = 0; twist.angular.z = 0
        cmd_vel_pub.publish(twist)

